name: iOS CI
on:
  push: { branches: ["**"] }
  pull_request: { branches: ["**"] }

jobs:
  build-test:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode_15.4.app || \
          sudo xcode-select -s /Applications/Xcode.app
          xcodebuild -version

      - name: Find Xcode project/workspace
        id: locate
        run: |
          PROJ=$(ls -1 *.xcodeproj */*.xcodeproj 2>/dev/null | head -n1)
          WORK=$(ls -1 *.xcworkspace */*.xcworkspace 2>/dev/null | head -n1)
          echo "PROJ=$PROJ" >> $GITHUB_ENV
          echo "WORK=$WORK" >> $GITHUB_ENV
          echo "Found project: $PROJ"
          echo "Found workspace: $WORK"

      - name: Cache SPM
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

      - name: Resolve packages
        run: |
          if [ -n "$WORK" ]; then
            xcodebuild -workspace "$WORK" -resolvePackageDependencies
          else
            xcodebuild -project "$PROJ" -resolvePackageDependencies
          fi

      - name: Build & Test (runs SwiftLint plugin too)
        run: |
          set -o pipefail
          DEST="platform=iOS Simulator,name=iPhone 15"
          if [ -n "$WORK" ]; then
            xcodebuild -workspace "$WORK" -scheme "PokemonAnalyticsApp" -destination "$DEST" -skipPackagePluginValidation -skipMacroValidation clean test | tee xcodebuild.log
          else
            xcodebuild -project "$PROJ" -scheme "PokemonAnalyticsApp" -destination "$DEST" -skipPackagePluginValidation -skipMacroValidation clean test | tee xcodebuild.log
          fi
