name: iOS CI

on:
  push: { branches: ['**'] }
  pull_request: { branches: ['**'] }

jobs:
  build-test:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode_15.4.app || sudo xcode-select -s /Applications/Xcode.app
          xcodebuild -version

      - name: Locate Xcode project & shared scheme
        run: |
          set -euo pipefail
          PROJ="$(git ls-files '**/*.xcodeproj' | head -n1 || true)"
          if [ -z "$PROJ" ]; then
            echo "::error::No .xcodeproj found in repo"; exit 1
          fi
          echo "PROJECT: $PROJ"

          # detect shared scheme (.xcscheme committed)
          SCHEME="$(ls -1 "$PROJ"/xcshareddata/xcschemes/*.xcscheme 2>/dev/null | sed 's#.*/##; s#.xcscheme$##' | head -n1 || true)"
          if [ -z "$SCHEME" ]; then
            echo "::group::Available schemes (not shared?)"
            xcodebuild -list -project "$PROJ" || true
            echo "::endgroup::"
            echo "::error::No shared scheme found. In Xcode: Product > Scheme > Manage Schemesâ€¦ > check 'Shared' and commit *.xcscheme"
            exit 1
          fi
          echo "SCHEME: $SCHEME"

          echo "PROJ=$PROJ" >> $GITHUB_ENV
          echo "SCHEME=$SCHEME" >> $GITHUB_ENV

      - name: Resolve packages
        run: xcodebuild -project "$PROJ" -resolvePackageDependencies

      - name: Build & Test (runs SwiftLint plugin if attached)
        run: |
          set -o pipefail
          xcodebuild \
            -project "$PROJ" \
            -scheme "$SCHEME" \
            -destination 'platform=iOS Simulator,OS=latest,name=iPhone 15' \
            -skipPackagePluginValidation -skipMacroValidation \
            clean test | tee xcodebuild.log
